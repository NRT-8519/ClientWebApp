@page "/new_doctor"

@using ClientWebApp.DTOs;
@using ClientWebApp.Components.Forms;
@using System.Text;
@using System.Text.Json;

@inject HttpClient Client
@inject NavigationManager NavigationManager

<div class="d-flex flex-column content text-center justify-content-center align-items-center">
    <h1 class="display-4 mt-1">New doctor</h1>
    <EditForm Model="doctor" OnValidSubmit="Execute" class="container">
        <DataAnnotationsValidator />
        <div class="row col-12 mb-4">
            <div class="col-12">
                <div class="row">
                    <div class="col-md-3 col-sm-12">
                        <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.FirstName" Title="First Name" Label="First Name" Id="first_name" For="() => doctor.FirstName" />
                    </div>
                    <div class="col-md-3 col-sm-12">
                        <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.MiddleName" Title="Middle Name" Label="Middle Name" Id="middle_name" For="() => doctor.MiddleName" />

                    </div>
                    <div class="col-md-3 col-sm-12">
                        <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.LastName" Title="Last Name" Label="Last Name" Id="last_name" For="() => doctor.LastName" />

                    </div>
                    <div class="col-md-3 col-sm-12">
                        <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.Title" Title="Title" Label="Title" Id="Title" For="() => doctor.Title" />

                    </div>
                </div>
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-md-6 col-sm-12">
                <GenderFormCard DisableInput="@DisableInput" @bind-Gender="@doctor.Gender" ValidationForGender="@(() => @doctor.Gender)" />
            </div>
            <div class="col-md-6 col-sm-12">
                <DateOfBirthFormCard DisableInput="@DisableInput" @bind-DateOfBirth="@doctor.DateOfBirth" For="() => doctor.DateOfBirth"/>
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-md-6 col-sm-12">
                <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.AreaOfExpertise" Title="Area of Expertise" Label="Area of Expertise" Id="area_of_expertise" For="() => doctor.AreaOfExpertise"/>
            </div>
            <div class="col-md-6 col-sm-12">
                <div class="card card-body bg-light">
                    <h4>Doctor's office</h4>
                    <div class="mb-1">
                        <div class="form-floating">
                            <InputNumber min="100" max="999" disabled="@DisableInput" placeholder="Room number" class="form-control" id="room_number" ParsingErrorMessage="Out of bounds!" @bind-Value="doctor.RoomNumber" />
                            <label for="room_number">Doctor's office</label>
                            <ValidationMessage For="() => doctor.RoomNumber"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-12">
                <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.Username" Title="Username" Label="Username" Id="username" For="() => doctor.Username" />
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-md-6 col-sm-12">
                <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.Email" Title="Email" Label="Email" Id="email" For="() => doctor.Email"/>
            </div>
            <div class="col-md-6 col-sm-12">
                <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.PhoneNumber" Title="Phone Number" Label="Phone Number" Id="phoneNumber" For="() => doctor.PhoneNumber" />
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-md-12 col-sm-12">
                <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@doctor.SSN" Title="Social Security Number" Label="SSN" Id="ssn" For="() => doctor.SSN"/>
            </div>
        </div>
        <div class="row col-12 mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <button disabled="@DisableInput" type="submit" class="btn btn-lg btn-success w-100">
                    Create new doctor
                </button>
            </div>
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <a disabled="@DisableInput" href="doctors" class="btn btn-lg btn-secondary w-100">
                    Discard
                </a>
            </div>
        </div>
        <div class="row col-12 mb-3 text-start">
        </div>
    </EditForm>
</div>
@code {
    private DoctorDetailsDTO? doctor = new() { Password = null, RoomNumber = 100, DateOfBirth = DateOnly.FromDateTime(DateTime.Now) };
    private bool DisableInput = false;

    private async Task Execute()
    {
        DisableInput = true;
        string content = JsonSerializer.Serialize(doctor);
        StringContent bodyContent = new StringContent(content, Encoding.UTF8, "application/json");
        await Client.PostAsync("api/users/doctors/add", bodyContent);

        NavigationManager.NavigateTo("/doctors/");
    }
}
