@page "/administrator_details/{UUID}"
@using Blazored.LocalStorage;
@using ClientWebApp.DTOs;
@using ClientWebApp.Features;

@inject ILocalStorageService localStorage
@inject HttpClient Client
@inject NavigationManager NavigationManager

<div class="container text-center justify-content-center align-items-center mt-5">
    <h1 class="display-4 mb-5">Administrator details</h1>
    @if (administrator == null)
    {
        <SpinnerLoader />
    }
    else
    {
        <div class="row text-center justify-content-center align-items-stretch mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Name</h5>
                    <p class="card-text">
                        <strong>
                            @(administrator.FirstName + " " + administrator.MiddleName.First() + ". " + administrator.LastName)
                        </strong>
                    </p>
                </div>
            </div>
            <div class="col-md-4 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Title</h5>
                    <p class="card-text">
                        <strong>
                            @(administrator.Title == null ? "No title" : administrator.Title)
                        </strong>
                    </p>
                </div>
            </div>
            <div class="col-md-2 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Gender</h5>
                    @if (administrator.Gender == 'M')
                    {
                        <div class="bi bi-gender-male" style="font-size: 2rem; color: deepskyblue;" />
                    }
                    else if (administrator.Gender == 'F')
                    {
                        <div class="bi bi-gender-female" style="font-size: 2rem; color: hotpink;" />
                    }
                    else
                    {
                        <div class="bi bi-gender-ambiguous" style="font-size: 2rem; color: mediumpurple;" />
                    }
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Date of birth</h5>
                    <p class="card-text"><strong>@administrator.DateOfBirth</strong></p>
                </div>
            </div>
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Social Security Number</h5>
                    <p class="card-text"><strong>@administrator.SSN</strong></p>
                </div>

            </div>
        </div>
        <div class="row mb-4">
            <div class="col-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Username</h5>
                    <p class="card-text"><strong>@(administrator.Username)</strong></p>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Account status</h5>
                    <p class="card-text"><strong>@(administrator.IsDisabled ? "Disabled" : administrator.IsExpired ? "Expired password" : "Active")</strong></p>
                </div>
            </div>
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Password expiry date and time</h5>
                    <p class="card-text"><strong>@administrator.PasswordExpiryDate</strong></p>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Email</h5>
                    <p class="card-text"><a class="link-secondary" href="mailto:@(administrator.Email)"><i class="bi bi-envelope" /> @administrator.Email</a></p>

                </div>
            </div>
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Phone number</h5>
                    <p class="card-text"><a class="link-secondary" href="tel:@(administrator.PhoneNumber)"><i class="bi bi-telephone" /> @administrator.PhoneNumber</a></p>

                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-12 col-sm-12 mb-md-0 mb-sm-3">
                <div class="card card-body bg-light h-100">
                    <h5 class="card-title">Unique identifier</h5>
                    <p class="card-text"><strong>@administrator.UUID</strong></p>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <a href="edit_administrator/@(administrator.UUID)" class="btn btn-lg btn-warning w-100">
                    Edit
                </a>
            </div>
            <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                <a href="print_administrator_details/@(administrator.UUID)" class="btn btn-lg btn-secondary w-100">
                    Print
                </a>
            </div>
        </div>
    }
</div>

@code {
    [ParameterAttribute]
    public string UUID { get; set; }

    public UserDetailsDTO? administrator;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsStringAsync("token");
        var claims = JwtParser.ParseClaimsFromJwt(token);
        var jti = claims.Single(c => c.Type.Equals("jti")).Value;

        if (UUID.Equals(jti))
        {
            NavigationManager.NavigateTo("/profile/" + UUID);
        }
        else
        {
            administrator = await Client.GetFromJsonAsync<UserDetailsDTO>("api/users/" + UUID);
        }
    }
}
