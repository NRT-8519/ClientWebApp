@page "/edit_administrator/{UUID}"
@using ClientWebApp.Components.Forms
@using ClientWebApp.DTOs;
@using System.Text.Json;
@using System.Text;
@using Microsoft.AspNetCore.Components;

@inject HttpClient Client
@inject NavigationManager NavigationManager

<div class="container text-center justify-content-center align-items-center">
    <h1 class="display-4 mt-1">Editing administrator</h1>
    @if (administrator == null)
    {
        <SpinnerLoader />
    }
    else
    {
        <EditForm Model="administrator" OnValidSubmit="Execute">
            <DataAnnotationsValidator />
            <div class="row col-12 mb-4">
                <div class="col-12">
                    <div class="row">
                        <div class="col-md-3 col-sm-12">
                            <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.FirstName" Title="First Name" Label="First Name" Id="first_name" For="() => administrator.FirstName" />
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.MiddleName" Title="Middle Name" Label="Middle Name" Id="middle_name" For="() => administrator.MiddleName" />

                        </div>
                        <div class="col-md-3 col-sm-12">
                            <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.LastName" Title="Last Name" Label="Last Name" Id="last_name" For="() => administrator.LastName" />

                        </div>
                        <div class="col-md-3 col-sm-12">
                            <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.Title" Title="Title" Label="Title" Id="Title" For="() => administrator.Title" />

                        </div>
                    </div>
                </div>
            </div>
            <div class="row col-12 mb-4">
                <div class="col-md-6 col-sm-12">
                    <GenderFormCard DisableInput="@DisableInput" @bind-Gender="@administrator.Gender" ValidationForGender="() => administrator.Gender" />
                </div>
                <div class="col-md-6 col-sm-12">
                    <DateOfBirthFormCard DisableInput="@DisableInput" @bind-DateOfBirth="@administrator.DateOfBirth" For="() => administrator.DateOfBirth" />
                </div>
            </div>
            <div class="row col-12 mb-4">
                <div class="col-12">
                    <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.Username" Title="Username" Label="Username" Id="username" For="() => administrator.Username" />
                </div>
            </div>
            <div class="row col-12 mb-4">
                <div class="col-md-6 col-sm-12">
                    <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.Email" Title="Email" Label="Email" Id="email" For="() => administrator.Email" />
                </div>
                <div class="col-md-6 col-sm-12">
                    <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.PhoneNumber" Title="Phone Number" Label="Phone Number" Id="phoneNumber" For="() => administrator.PhoneNumber" />
                </div>
            </div>
            <div class="row col-12 mb-4">
                <div class="col-md-12 col-sm-12">
                    <TextInputCard DisableInput="@DisableInput" @bind-TextValue="@administrator.SSN" Title="Social Security Number" Label="SSN" Id="ssn" For="() => administrator.SSN" />
                </div>
            </div>
            <div class="row col-12 mb-3">
                <div class="col-md-6 col-sm-12">
                    <div class="card card-body bg-light h-100">
                        <h4>Password expiry date</h4>
                        <p class="card-text"><strong>@(administrator.PasswordExpiryDate)</strong></p>
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="card card-body bg-light h-100">
                        <button disabled="@(DisableInput || administrator.IsExpired)" type="button" @onclick="ForceExpireAccount" class="btn btn-lg btn-danger w-100 h-100">
                            Force password expiry
                        </button>
                    </div>
                </div>
            </div>
            <div class="row col-12 mb-3">
                <div class="col-md-12 col-sm-12">
                    <div class="card card-body bg-light h-100">
                        <h4>Unique Identifier</h4>
                        <p disabled class="card-text"><strong>@(administrator.UUID)</strong></p>
                    </div>
                </div>
            </div>
            <div class="row col-12 mb-3">
                <div class="col-md-4 col-sm-12 mb-md-0 mb-sm-3">
                    <button disabled="@DisableInput" type="submit" class="btn btn-lg btn-primary w-100">
                        Save changes
                    </button>
                </div>
                <div class="col-md-4 col-sm-12 mb-md-0 mb-sm-3">
                    @if (administrator.IsDisabled)
                    {
                        <button disabled="@DisableInput" type="button" @onclick="EnableAccount" class="btn btn-lg btn-success w-100">
                            Enable account
                        </button>
                    }
                    else
                    {
                        <button disabled="@DisableInput" type="button" @onclick="DisableAccount" class="btn btn-lg btn-danger w-100">
                            Disable account
                        </button>
                    }
                </div>
                <div class="col-md-4 col-sm-12 mb-md-0 mb-sm-3">
                    <a disabled="@DisableInput" href="administrators" class="btn btn-lg btn-secondary w-100">
                        Discard changes
                    </a>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {

    [ParameterAttribute]
    public string UUID { get; set; }
    public bool DisableInput = false;
    public UserDetailsDTO? administrator;

    public async Task Execute()
    {
        DisableInput = true;
        string content = JsonSerializer.Serialize(administrator);
        StringContent bodyContent = new StringContent(content, Encoding.UTF8, "application/json");
        await Client.PutAsync("api/users/edit", bodyContent);

        NavigationManager.NavigateTo("/administrator_details/" + UUID);
    }

    public async Task DisableAccount()
    {
        administrator.IsDisabled = true;

        await Execute();
    }

    public async Task EnableAccount()
    {
        administrator.IsDisabled = false;

        await Execute();
    }

    public async Task ForceExpireAccount()
    {
        administrator.IsExpired = true;
        administrator.PasswordExpiryDate = DateTime.Now;

        await Execute();
    }

    protected override async Task OnInitializedAsync()
    {
        administrator = await Client.GetFromJsonAsync<UserDetailsDTO>("api/users/" + UUID);
    }
}
