@page "/edit_note/{UUID}/{PatientUUID}/{ID}"
@using Blazored.LocalStorage;
@using ClientWebApp.DTOs;
@using ClientWebApp.Features;

@inject HttpClient Client
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage

<div class="container text-center justify-content-center align-items-center mt-5">
    @if (AllowView)
    {
        <h4 class="display-4 mb-5">Editing Note</h4>

        @if (note == null)
        {
            <SpinnerLoader/>
        }
        else
        {
            <EditForm Model="note" OnValidSubmit="Execute">
                <div class="row mb-4">
                    <div class="card card-body bg-light">
                        <h4 class="card-title">Note title</h4>
                        <div class="col-12">
                            <div class="form-floating">
                                <InputText class="form-control" @bind-Value="note.NoteTitle" id="title" />
                                <label for="title">Note Title</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="card card-body bg-light">
                        <h4 class="card-title">Note content</h4>
                        <div class="col-12">
                            <div class="form-floating">
                                <InputTextArea class="form-control h-100" rows="5" @bind-Value="note.Note" id="content"></InputTextArea>
                                <label for="content">Note content</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                        <button disabled="@DisableInput" type="submit" class="btn btn-lg btn-success w-100">
                            Save
                        </button>
                    </div>
                    <div class="col-md-6 col-sm-12 mb-md-0 mb-sm-3">
                        <a disabled="@DisableInput" href="@("notes/" + UUID)" class="btn btn-lg btn-secondary w-100">
                            Discard
                        </a>
                    </div>
                </div>
            </EditForm>
        }
    }
    else
    {
        <h4 class="display-4">Page Not Found</h4>
    }
</div>

@code {
    [ParameterAttribute]
    public string UUID { get; set; }

    [ParameterAttribute]
    public string PatientUUID { get; set; }

    [ParameterAttribute]
    public string ID { get; set; }

    private NotesDTO note;
    private bool DisableInput = false;
    private bool AllowView = true;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsStringAsync("token");
        var claims = JwtParser.ParseClaimsFromJwt(token);

        var jti = claims.Single(c => c.Type.Equals("jti")).Value;

        if (UUID.Equals(jti))
        {
            note = await Client.GetFromJsonAsync<NotesDTO>("api/notes/" + ID);

            if (note.PatientUUID != Guid.Parse(PatientUUID) || note.DoctorUUID != Guid.Parse(UUID))
            {
                AllowView = false;
            }
        }
        else
        {
            AllowView = false;
        }
    }

    protected async Task Execute()
    {
        DisableInput = true;
        await Client.PutAsJsonAsync<NotesDTO>("api/notes/edit", note);

        await Task.Delay(1000);

        NavigationManager.NavigateTo("/notes/" + UUID);
    }
}
