@page "/notes"
@using ClientWebApp.DTOs;

@inject HttpClient Client

<div class="d-flex flex-column content text-center justify-content-center align-items-center mt-5">
    @if (patients != null)
    {
        <h4 class="display-4 mb-5">Notes</h4>

        <div class="row col-12 mb-4">
            <div class="container">
                <div class="card card-body bg-light">
                    <h4>Patient</h4>
                    <div class="form-floating">
                        <InputSelect class="form-select" @bind-Value="UUID" id="patient_select">
                            <option disabled value="">Select a patient...</option>
                            @foreach (var patient in patients)
                            {
                                <option value="@patient.UUID">@patient.FirstName @patient.LastName</option>
                            }
                        </InputSelect>
                        <label for="patient_select">Patient</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-12">
                @if (notes != null)
                {

                }
                else
                {
                    <h4>No notes to display</h4>
                }
            </div>
        </div>

    }
    else
    {
        <SpinnerLoader/>
    }
</div>

@code {
    private string uuid = "";
    public string UUID 
    { 
        get => uuid;
        set => SetUUID(value);
    }

    public List<PatientDetailsDTO> patients;
    public List<string> notes;

    protected override async Task OnInitializedAsync()
    {
        patients = await Client.GetFromJsonAsync<List<PatientDetailsDTO>>("api/users/patients/all" + UUID);
    }

    private async void SetUUID(string value)
    {
        uuid = value;
        await GetNotes();
    }

    protected async Task GetNotes()
    {
        Console.WriteLine(UUID);
    }
}
